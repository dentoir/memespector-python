;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;CONFIGURATION FILE FOR MEMESPECTOR PYTHON VERSION;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;-----------------------------------------------------

[Project]

ProjectFolder: YourProjectFolder
; Will be used to name a folder bundling the output files

;-----------------------------------------------------

[InputConfiguration]

InputFile: thelistcontainingtheurls.tab
; File with image list. It should be in the 'data' folder.

ImagesColumn: imageurl
; Column header in CSV for the image file names or URL addresses, depending on whether files are local or remote. Header must be unique.

LinkColumn: link
; Column header in CSV for a link attribute (i.e. the URL for the post or page from which the image was extracted). Leave empty if there is no such column.

Delimiter: \t
; Set to the character used to delimit the columns of the input file. Set to \t for tab.

Limit: 20
; Create a maximum number of images to process (use 0 for unlimited processing)

;-----------------------------------------------------

[OutputConfiguration]

;-- All outputs

LabelScoreFilter: 0.5
; Minimum score to include the label in the processed files.
; Set 0 if you do not want to filter the labels (Google only returns labels scoring over 0.5).

;-- Spreadsheet output

IncludeScoreInSpreadsheet: yes
; Set to 'no' to only list the labels without specifying their scores

;-- Network output

MakeNetwork: no
; If set to yes, an image-label network will be generated in a gexf file which may be imported in Gephi

MakeWebEntitiesNetwork: no
; If set to yes, a image-web entity network will be generated in a gexf file which may be imported in Gephi

;-----------------------------------------------------

[ApiRequestFeatures]

; Set YES to the modules you wish to activate in your requests

Label:          no
SafeSearch:     no
Text:           no
Web:            no
Face:           no

MaxResults:     10
; Limits maximum number of results per aspect. Set to 0 if you do not want to send this parameter in the request to Google (get the response within the default maximum results for each aspect)

ApiKey: YOUR_API_KEY_HERE

;-----------------------------------------------------

[SourceImagesLocation]

ImagesRemote: yes
; Set YES if images are found online. Otherwise, script will retrieve images from local path

SaveImageCopy: yes
; Set YES if you wish to make local copies of the processed images

;----

AbsolutePath: no
; For processing of local images only. Indicate if path is absolute. If not, set the default folder below.

InputImageFolder:
; Absolute path for folder where local images are located

ForceBase64: yes
; Leave on yes if unsure.
; Set to YES to process remote images using your computer as a 'middle-man'. Slower and with more network traffic, but necessary when Google Vision API is unable to retrieve images by itself. Facebook does not allow Google to retrieve images directly.

;-----------------------------------------------------

[Folders]

; You probably will not need to change things here

DataFolder: data
CacheFolder: cache
OutputsFolder: outputs
ImageCopyFolder: img
CacheCopyFolder: annotations
